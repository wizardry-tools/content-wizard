[{"configurationName":"core-components-examples","queries":[]},{"configurationName":"we-retail","queries":[{"path":{"shortForm":"/we-retail/we-retail-store-info-list","longForm":"/we-retail/settings/graphql/persistentQueries/we-retail-store-info-list"},"data":{"query":"{\n  weRetailStoreInfoList {\n    items {\n      _path\n      _variations\n      storelocation\n      contactnumber\n      description\n      gift_cards\n      dateopened\n    }\n  }\n}"}}]},{"configurationName":"wknd-shared","queries":[{"path":{"shortForm":"/wknd-shared/adventures-all","longForm":"/wknd-shared/settings/graphql/persistentQueries/adventures-all"},"data":{"query":"# Retrives a list of all Adventures\n  {\n    adventureList {\n      items {\n        _path\n        slug\n        title\n        activity\n        price\n        tripLength\n        primaryImage {\n          ... on ImageRef {\n            _path\n            _authorUrl\n            _publishUrl\n            mimeType\n            width\n            height\n          }\n        }\n      }\n    }\n  }\n"}},{"path":{"shortForm":"/wknd-shared/adventure-by-path","longForm":"/wknd-shared/settings/graphql/persistentQueries/adventure-by-path"},"data":{"query":"# Get an adventure by path\n# Expects query variables like:\n# {\"adventurePath\": \"/content/dam/wknd-shared/en/adventures/bali-surf-camp/bali-surf-camp\"}\nquery getAdventureByPath($adventurePath: String!) {\n  adventureByPath(_path: $adventurePath) {\n    item {\n      _path\n      title\n      slug\n      description {\n        json\n        plaintext\n        html\n      }\n      adventureType\n      tripLength\n      activity\n      groupSize\n      difficulty\n      price\n      primaryImage {\n        ...on ImageRef {\n          _path\n          _authorUrl\n          _publishUrl\n          width\n          height\n          mimeType\n        }\n      }\n      itinerary {\n        json\n        plaintext\n        html\n      }\n    }\n  }\n}\n"}},{"path":{"shortForm":"/wknd-shared/adventure-by-slug","longForm":"/wknd-shared/settings/graphql/persistentQueries/adventure-by-slug"},"data":{"query":"# Retrieves an Adventure Fragment based on it's slug\n# Example Query Variables: \n# {\"slug\": \"bali-surf-camp\"} \n# Technically returns an adventure list but since the the slug \n# property is set to be unique in the CF Model, only a single CF is expected\n\nquery($slug: String!) {\n  adventureList(filter: {\n        slug: {\n          _expressions: [ { value: $slug } ]\n        }\n  \t}) {\n    items {\n      _path\n      title\n      slug\n      activity\n      adventureType\n      price\n      tripLength\n      groupSize\n      difficulty\n      price\n      primaryImage {\n        ... on ImageRef {\n          _path\n          _authorUrl\n          _publishUrl\n          mimeType\n          width\n          height\n        }\n      }\n      description {\n        json\n        plaintext\n        html\n      }\n      itinerary {\n        json\n        plaintext\n        html\n      }\n    }\n    _references {\n      ...on AdventureModel {\n        _path\n        slug\n        title\n        price\n        __typename\n      }\n    }\n  }\n}"}},{"path":{"shortForm":"/wknd-shared/adventure-by-price","longForm":"/wknd-shared/settings/graphql/persistentQueries/adventure-by-price"},"data":{"query":"# Retrieves an Adventure Fragment based on a given price and operator\n#\n# Example Query Variables: \n# {\"price\": 1200, \"priceOperator\": \"LOWER\"}\n# {\"price\": 1200, \"priceOperator\": \"GREATER_EQUAL\"}\n\n\nquery filterAdventuresByPrice($price: Float!, $priceOperator: FloatOperator!) {\n  adventureList(filter: {\n    \tprice: {\n        _expressions: [ {value: $price, _operator: $priceOperator}]\n      }\n  \t}) {\n    items {\n      _path\n      title\n      slug\n      activity\n      adventureType\n      price\n      tripLength\n      groupSize\n      difficulty\n      price\n      primaryImage {\n        ... on ImageRef {\n          _path\n          _authorUrl\n          _publishUrl\n          mimeType\n          width\n          height\n        }\n      }\n      description {\n        json\n        plaintext\n        html\n      }\n      itinerary {\n        json\n        plaintext\n        html\n      }\n    }\n  }\n}"}},{"path":{"shortForm":"/wknd-shared/adventures-by-activity","longForm":"/wknd-shared/settings/graphql/persistentQueries/adventures-by-activity"},"data":{"query":"# Filters a list of Adventures based on the activity\n#\n# Example Query Variables: \n# {\"activity\": \"Surfing\"}\n\nquery($activity: String!) {\n  adventureList(filter: {\n        activity: {\n          _expressions: [ { \n          value: $activity \n          _ignoreCase: true} ]\n        }\n  \t}) {\n    items {\n      _path\n        slug\n        title\n        activity\n        price\n        tripLength\n        primaryImage {\n          ... on ImageRef {\n            _path\n            _authorUrl\n            _publishUrl\n            mimeType\n            width\n            height\n          }\n      }\n    }\n  }\n}\n\n"}},{"path":{"shortForm":"/wknd-shared/articles-all","longForm":"/wknd-shared/settings/graphql/persistentQueries/articles-all"},"data":{"query":"# Retrieves a list of all Articles\n# includes a reference to the Author Model (nested fragment)\n\nquery getAllArticles{\n  articleList {\n    items {\n      _path\n      title\n      slug\n      featuredImage {\n        ...on ImageRef {\n          _path\n          _authorUrl\n          _publishUrl\n          width\n          height\n        }\n      }\n      authorFragment {\n        firstName\n        lastName\n        profilePicture {\n          ...on ImageRef {\n            _path\n            _authorUrl\n            _publishUrl\n          }\n        }\n      }\n    }\n  }\n}"}},{"path":{"shortForm":"/wknd-shared/article-by-path","longForm":"/wknd-shared/settings/graphql/persistentQueries/article-by-path"},"data":{"query":"# Retrieves an article by path\n# Expected query variables like:\n\n# includes a reference to the Author Model (nested fragment)\n\nquery getArticleByPath($articlePath: String!){\n  articleByPath(_path: $articlePath) {\n    item {\n      _path\n      title\n      slug\n      main {\n        json\n      }\n      featuredImage {\n        ...on ImageRef {\n          _path\n          _authorUrl\n          _publishUrl\n          width\n          height\n        }\n      }\n      authorFragment {\n        firstName\n        lastName\n        profilePicture {\n          ...on ImageRef {\n            _path\n            _authorUrl\n            _publishUrl\n          }\n        }\n      }\n    }\n  }\n}"}},{"path":{"shortForm":"/wknd-shared/article-by-author","longForm":"/wknd-shared/settings/graphql/persistentQueries/article-by-author"},"data":{"query":"# Filters a list of Articles fragment based on the referenced Author\n# Example Query Variables: \n# {\"authorFirstName\": \"Stacey\", \"authorLastName\": \"Roswells\"}\n\n\nquery getArticleByAuthor($authorFirstName: String!, $authorLastName: String!) {\n  articleList(filter: {\n    \tauthorFragment: {\n        firstName: {\n          _expressions: [ { value: $authorFirstName } ]\n        }\n        lastName: {\n          _expressions: [ { value: $authorLastName } ]\n        }\n      }\n  \t}) {\n    items {\n      _path\n      title\n      slug\n      main {\n        json\n      }\n      featuredImage {\n        ...on ImageRef {\n          _path\n          _authorUrl\n          _publishUrl\n          width\n          height\n        }\n      }\n      authorFragment {\n        firstName\n        lastName\n        profilePicture {\n          ...on ImageRef {\n            _path\n            _authorUrl\n            _publishUrl\n          }\n        }\n      }\n    }\n  }\n}"}},{"path":{"shortForm":"/wknd-shared/article-by-slug","longForm":"/wknd-shared/settings/graphql/persistentQueries/article-by-slug"},"data":{"query":"# Returns an article based on it's slug\n#\n# Example Query Variables: \n# {\"slug\": \"alaskan-adventures\"}\n#\n# Technically a filter but it is expected that \n# the slug property is unique across all Articles, should return a single article\n\n\nquery getArticleBySlug($slug: String!) {\n  articleList(filter: {\n    slug: {\n      _expressions: [ { value: $slug } ]\n    }\n  \t}) {\n    items {\n      _path\n      title\n      slug\n      main {\n        json\n      }\n      featuredImage {\n        ...on ImageRef {\n          _path\n          _authorUrl\n          _publishUrl\n          width\n          height\n        }\n      }\n      authorFragment {\n        firstName\n        lastName\n        profilePicture {\n          ...on ImageRef {\n            _path\n            _authorUrl\n            _publishUrl\n          }\n        }\n      }\n    }\n  }\n}"}}]}]