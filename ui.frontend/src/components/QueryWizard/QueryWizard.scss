$min-app-width: 400px;
$wrapper-height: 100vh;
$header-height: 90px;
$content-height: calc(#{$wrapper-height} - #{$header-height});
$builder-height: calc(#{$content-height} - 6vh);
$builder-bg-color: rgba(59, 75, 104, 0.1);
$builder-context-height: calc(#{$builder-height} - 8vh);
$button-hover-bg-color: hsla(338, 100%, 67%, 0.9);

/* WRAPS EVERYTHING */
.query-wizard-content-wrapper {
  height: $wrapper-height;
  display: flex;
  flex-direction: column;

  /* HEADER */
  .query-wizard-header {
    height: $header-height;
    display: inline-flex;
    position: initial;
    flex-shrink: 0;
    .query-wizard-header-tabs {
      .query-wizard-header-tab {
        min-height: 50px;
        &:hover {
          svg {
            animation: hithere 1s ease infinite;
          }
        }
      }
    }
  }

  /* CONTENT BODY */
  .query-wizard-content {
    height: $content-height;
    overflow: auto;
    display: inline-flex;
    flex-shrink: 1;
    flex-grow: 1;
    .react-swipeable-view-container {
      height: $content-height;
      .react-swipeable-view-slide {
        height: $content-height;
      }
    }

    // TODO: Fix, I can't get this transition to work
    .smooth-transition {
      transition: height 2s linear 0.5s;
      > div {
        transition: all 1s ease-out;
      }
    }

    .query-wizard-content-panel {
      display: flex;
      flex-direction: column;
      height: $content-height;
      padding-bottom: 0;
    }
  }

  // TODO: this goes to the IDE response window, need to move this.

  .wizard-builder {
    overflow: auto;
    height: $builder-height;
    max-height: $builder-height;
    background-color: $builder-bg-color;

    .main-stack {
      display: flex;
      align-content: stretch;
      padding-right: 4rem;
      flex-wrap: nowrap;

      .accordion-stack {
        display: inline-flex;
        flex-shrink: 4;
        flex-grow: 1;
        padding: 2rem;

        .accordion-paper {
          background-color: $builder-bg-color;
          padding: 1rem;
          max-height: $builder-context-height;
          overflow: auto;

          .query-builder-field {
            width: 100%;
          }
        }
      }

      //.statement-with-button-stack {
        //flex-grow: 1;
        .statement-stack {
          display: inline-flex;
          flex-grow: 1;
          flex-shrink: 4;
          padding: 2rem;

          .statement-paper {
            padding: 1rem;
            background-color: $builder-bg-color;
            height: $builder-context-height;

            .wizard-editor-stack {
              height: 100%;
            }
          }
        }
      //}


      .query-button-stack {
        .query-handler-button {
          display: flex;
          -webkit-tap-highlight-color: transparent;
          min-width: 0;
          flex-grow: 0;
          top: 3rem;
          right: 3rem;
          position: fixed;
          transition: transform 200ms ease-in;
          span {
            display: inline-flex;
          }
          svg {
            display: inline-flex;
          }

          p {
            display: inline-flex;
            white-space: nowrap;
            min-width: 0;
            width: 100px;
            overflow: hidden;
            transition: all 200ms ease-in;

            &.query-button-hide {
              flex-grow: 0;
              width: 0;
            }

            &.query-button-hover {
              flex-grow: 1;
            }
          }

          &.query-button-hide {

          }
          &.query-button-hover {
            background-color: $button-hover-bg-color;
          }


          &:active {
            transform: translateY(4%);
          }

          .query-button-icon.query-button-hover {
            margin-right: .5rem;
            animation-delay: 200ms;
            animation-duration: 2.5s;
            animation-name: bounce;
            animation-iteration-count: 1;
            animation-timing-function: ease-in-out;
            @keyframes bounce {
              0% {
                transform: translateX(-60%);
              }
              10% {
                transform: translateX(0%);
              }
              20% {
                transform: translateX(-30%);
              }
              30% {
                transform: translateX(0%);
              }
              40% {
                transform: translateX(-15%);
              }
              50% {
                transform: translateX(0%);
              }
              60% {
                transform: translateX(-7%);
              }
              70% {
                transform: translateX(0%);
              }
              80% {
                transform: translateX(0%);
              }
              90% {
                transform: translateX(0%);
              }
              95% {
                transform: translateX(0%);
              }
              97% {
                transform: translateX(0%);
              }
              99% {
                transform: translateX(0%);
              }
              100% {
                transform: translateX(0);
              }
            }
          }
        }
      }
    }

    /* main-stack media queries */
    @media(max-width: 967px){
      .main-stack {
        flex-wrap: wrap-reverse;
        align-items: flex-end;
      }
    }
  }

  // TODO: create and move to wizard-statement-editor.scss
  .wizard-statement-editor {
    width: 100%;
    height: 100%;

    .wizard-statement-editor-paper {
      height: 100%;

      .wizard-statement-editor-stack {
      height: 100%;

        .wizard-statement-editor-toolbar {
          display: inline-flex;
          flex-grow: 0;
          min-width: 0;
          height: 100%;
        }

        .wizard-statement-editor-codemirror {
          display: inline-flex;
          flex-grow: 2;
          flex-shrink: 1;
          height: 100%;

          .CodeMirror-wrap {
            flex-grow: 2;
            flex-shrink: 1;
          }
        }
      }
    }
  }


  /* RESULT HANDLER */
  .result-handler {
    background-color: $builder-bg-color;
  }
}


@keyframes hithere {
  30% {
    transform: scale(1.2);
  }
  40%, 60% {
    transform: rotate(-20deg) scale(1.2);
  }
  50% {
    transform: rotate(20deg) scale(1.2);
  }
  70% {
    transform: rotate(0deg) scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}